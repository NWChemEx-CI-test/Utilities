name: Final release
# Workflow triggered by repo dispatched sent
# from downstream repos with the updating info
# in the client_payload structure
# Updating records are kept in the artifact
# update_record.dat
# After all repos being updated and tested
# 1. Merge dev to master
# 2. Tag stable images
on: 
  repository_dispatch:
    types: final_release
  workflow_dispatch:

jobs:
  create_update_artifact:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: check if the update artifact exist
        uses: xSAVIKx/artifact-exists-action@v0
        id: check_update_artifact
        with:
          name: update-artifact
      - name: create the artifact if it does not exist
        #if: ${{ steps.check_update_artifact.outputs.exists == false }}
        run: |
          # End repos for all
          #echo "scfgradient_updated=false" > update_record.dat
          #echo "nux_updated=false" >> update_record.dat
          #echo "casscf_updated=false" >> update_record.dat
          #echo "friendzone_updated=false" >> update_record.dat
          #echo "mp2_updated=false" >> update_record.dat
          #echo "nwpw_updated=false" >> update_record.dat
          #echo "nwxelsi_updated=false" >> update_record.dat
          # End repos for test now
          echo "artifact exists?" ${{ steps.check_update_artifact.outputs.exists }}
          echo "simde_updated=false" > update_record.dat
          #current_from_repo=${{ github.event.client_payload.from_repo }}
          #current_from_repo=${current_from_repo,,}
          #echo "${current_from_repo}_updated=true" >> update_record.dat
      - name: upload the created artifact
        if: ${{ steps.check_update_artifact.outputs.exists == "false" }}
        uses: actions/upload-artifact@v3
        with:
          name: update-artifact
          path: update_record.dat
          #- name: Early exit
          #  if: ${{ steps.check_update_artifact.outputs.exists == false }}
          #  run: |
          #    gh run cancel ${{ github.run_id }}
          #    gh run watch ${{ github.run_id }}
          #  env:
          #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # check if all repos have been updated successfully
  check_update_record:
    runs-on: ubuntu-latest
    needs: create_update_artifact
    outputs:
      all_updated: ${{ steps.check_var.outputs.updated }}
    steps:
       - uses: actions/checkout@v3
       - name: Download artifact
         uses: dawidd6/action-download-artifact@v2
         with:
           name: update-artifact
           workflow: final_release.yaml
       - name: check the variable values
         id: check_var
         run: |
           current_from_repo=${{ github.event.client_payload.from_repo }}
           current_from_repo=${current_from_repo,,}
           echo "${current_from_repo}_updated=true" >> update_record.dat
           source update_record.dat
           #if [ $(scfgradient_updated == true ] && \
           #   [ $(nux_updated == true ] && \
           #   [ $(casscf_updated == true ] && \
           #   [ $(friendzone_updated == true ] && \
           #   [ $(mp2_updated == true ] && \
           #   [ $(nwpw_updated == true ] && \
           #   [ $(nwxelsi_updated == true ]; then
           if [[ ${simde_updated} == true ]]; then
              echo "$updated=true" >> "$GITHUB_OUTPUT"
           fi
       - name: Upload artifact
         uses: actions/upload-artifact@v3
         with:
           name: update-artifact
           path: update_record.dat
  Merge:
    runs-on: ubuntu-latest
    needs: [create_update_artifact, check_update_record]
    if: ${{ needs.check_update_record.outputs.all_updated == true }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: merge dev to master
        uses: devmasx/merge-branch@master
        with:
          type: now
          from_branch: dev
          target_branch: master
          github_token: ${{ secrets.GITHUB_TOKEN }}     

          #repos: <
          #  [Utilities, TensorWrapper, PluginPlay, Chemist, SimDE,
          #   SCF, Integrals, ChemCache, CASSCF, FriendZone, MP2,
          #   NWPW, NWXELSI, SCFGradients, NWChemEX, NUX]

  Release:
    strategy:
      matrix:
        repos: [Utilities, TensorWrapper, PluginPlay, Chemist, SimDE]
    needs: [create_update_artifact, check_update_record]
    if: ${{ needs.check_update_record.outputs.all_updated == true }}
    uses: NWChemEx-CI-test/.github/.github/workflows/release-master_tmpl.yaml@master
    with:
      repo: ${{ matrix.repos }}
    secrets: inherit

  Delete-artifact:
    runs-on: ubuntu-test
    needs: [create_update_artifact, check_update_record]
    if: ${{ needs.check_update_record.outputs.all_updated == true }}
    steps:
      - uses: geekyeggo/delete-artifact@v2
        with:
          name: update-artifact

