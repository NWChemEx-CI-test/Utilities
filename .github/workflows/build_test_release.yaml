# This workflows handles any updates in the source codes.
# No dockerfile changes possible!
# The building image is built on-the-fly using the base
# image (no release images of the dependent repos!).
# In the end two new release images
# ghcr.io/nwchemex-ci-test/release_utilities:gcc(clang)-latest
# are generated. Whether these images are stable
# (do not break any downstream repos) or not is still 
# to be tested.
# This workflow should run in the branch which opens a
# PR to dev.

name: Build test release

on:
  pull_request:
    branches:
      - dev

jobs:
  build-building-image:
    runs-on: ubuntu-latest
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_PAT }}
      - uses: actions/checkout@v3
      - name: Build temporary building image for gcc
        run: |
          docker build -t ghcr.io/nwchemex-ci-test/building-image:gcc-tmp \
          -f build_tmp.Dockerfile . \
          --build-arg btag=stable
          docker push ghcr.io/nwchemex-ci-test/building-image:gcc-tmp
      - name: Build temporary building image for clang
        run: |
          docker pull ghcr.io/nwchemex-ci-test/building-image:gcc-tmp
          docker tag ghcr.io/nwchemex-ci-test/building-image:gcc-tmp ghcr.io/nwchemex-ci-test/building-image:clang-tmp
          docker push ghcr.io/nwchemex-ci-test/building-image:clang-tmp

  build-test-gcc:
    uses: NWChemEx-CI-test/.github/.github/workflows/build_test_release_tmpl.yaml@master
    needs: build-building-image
    with: 
      repo: Utilities
      clang-build: false
      gcc-build: true
      ninja_build: true
      test: true
      integration_test: false
      install: false
    secrets: inherit 
    #CMAIZE_GITHUB_TOKEN: ${{ secrets.CMAIZE_GITHUB_TOKEN }}
    #DOCKER_PAT: {{ secrets.DOCKER_PAT }}

  build-test-clang:
    uses: NWChemEx-CI-test/.github/.github/workflows/build_test_release_tmpl.yaml@master
    needs: build-building-image
    with:
      repo: Utilities
      clang-build: true
      gcc-build: false
      ninja_build: true
      test: true
      integration_test: false
      install: false
    secrets: inherit
  
  merge-pr-to-dev:
    runs-on: ubuntu-latest
    needs: [build-test-gcc, build-test-clang]
    steps:
      - name: merge pr to dev
        uses: "pascalgn/automerge-action@v0.15.6"
        env:
          GITHUB_TOKEN: "${{ secrets.DOCKER_PAT }}"
          MERGE_LABELS: ""

  integration_test-gcc:
    uses: NWChemEx-CI-test/.github/.github/workflows/build_test_release_tmpl.yaml@master
    needs: merge-pr-to-dev
    with:
      repo: Utilities
      clang-build: false
      gcc-build: true
      ninja_build: true
      test: true
      integration_test: true
      install: true
      ref: dev
    secrets: inherit

  integration_test-clang:
    uses: NWChemEx-CI-test/.github/.github/workflows/build_test_release_tmpl.yaml@master
    needs: merge-pr-to-dev
    with:
      repo: Utilities
      clang-build: true
      gcc-build: false
      ninja_build: true
      test: true
      integration_test: true
      install: true
      ref: dev
    secrets: inherit

  Merge:
    runs-on: ubuntu-latest
    needs: [integration_test-gcc, integration_test-clang]
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: merge dev to master
        uses: devmasx/merge-branch@master
        with:
          type: now
          from_branch: dev
          target_branch: master
          github_token: ${{ secrets.DOCKER_PAT }}
